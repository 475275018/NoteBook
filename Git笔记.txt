
什么是Git？   

最先进的版本控制系统，开源并免费。
分布式
集中式


创建版本库 步骤；创建一个空的目录 进入目录所在的地方    执行初始化命令

git init

个人信息

git config --global user.nanme "用户名"


git config --global user.email "邮箱"         

把文件添加到版本库   手动创建一个文本文件，并写入内容

查看仓库状态 git status


将文件添加到仓库  git add 文件名         将文件提交到仓库   git commit -m "提示信息"        git log 查看历史记录表




修改文件  手动修改文件

将文件添加到仓库  git add 文件名         将文件提交到仓库   git commit -m "提示信息"        git log 查看历史记录表

时光穿梭 后退版本； git reset  --hard 版本   {版本}；HEAD^ :上个版本          HEAD^^ :上上的版本      HEAD~100 第一百个版本以次内推
列如 git reset --hard HEAD^           

前进版本，撤回版本 git reset  --hard 编码    git reflog版本历史记录

工作区 --暂存区 --仓库 

撤销修改   1；当修改工作区文件，没有add或commit          git checkout -- 文件名

           2；当修改工作区文件，已经add但没有commit    {清除暂存区} git reset HEAD 文件名     按场景区1操作


删除      误删；手动删除一个文件 git checkout -- 文件名      删；手动删除一个文件  添加到暂存区  git rm 文件名



远程仓库
        Github
        注册账号 生成本机的ssh{密匙}   ssh-keygen -t rsa -C "邮箱地址"  钥匙地址在c盘

        链接到远程仓库   git remote add origin 

        从本地推送到仓库    git push origin master         从远程仓库下载到本地 git clone


分支 创建与合并

        查看分支 （branch） git branch         创建分支 git branch  分支名    

        切换分支 git checkout 分支名          合并分支 git merge 分支名           删除分支  git branch -d 分支名  

解决冲突 


        合并分支，发现合并错误   查看文件，发现文件有冲突的特殊显示   在手动修改文件内容，并提交   最后删除分支，冲突处理完成    


                                        pjx到此一游。